#+title: A POC of Directed HyperLMNtal 
#+author: Jin SANO

* About
  A simple implementation of calculus model Directed HyperLMNtal.
  
* Syntax
  #+NAME: Syntax of Directed HyperLMNtal
  #+begin_src ocaml
    (* argument of an atom *)
    type arg =
      | Atom of string * arg list  (* atom. e.g. a(X, Y) *)
      | Link of string             (* link. e.g. X *)

    (* process *)
    type proc = 
      | Zero
      | Ind of string option * arg  (* indirection. e.g. X -> a(Y) *)
      | Mol of proc * proc          (* molecule. e.g. (P, Q) *)  
      | New of string * proc        (* link creation. e.g. \X.P *)
      | Rule of proc * proc         (* rule. e.g. P :- Q. *)
  #+end_src

* VM
  #+begin_src ocaml
    (* node *)
    type vm_atom =
      | VMAtom of string * node_ref list
      | VMInd of node_ref
     and node_ref = (int * vm_atom) ref  (* (indeg, atom) *)
  #+end_src
  
    
  

  
